---
apiVersion: v1
kind: Namespace
metadata:
  name: heptio-sonobuoy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: heptio-sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: sonobuoy-serviceaccount
subjects:
- kind: ServiceAccount
  name: sonobuoy-serviceaccount
  namespace: heptio-sonobuoy
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-serviceaccount
  namespace: heptio-sonobuoy
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: v1
data:
  config.json: |
    {
        "Description": "ab",
        "Filters": {
            "LabelSelector": "",
            "Namespaces": ".*"
        },
        "PluginNamespace": "heptio-sonobuoy",
        "Plugins": [
            {
                "name": "ab"
            }
        ],
        "Resources": [
            "CertificateSigningRequests",
            "ClusterRoleBindings",
            "ClusterRoles",
            "ComponentStatuses",
            "CustomResourceDefinitions",
            "Nodes",
            "PersistentVolumes",
            "PodSecurityPolicies",
            "ServerVersion",
            "StorageClasses",
            "ConfigMaps",
            "DaemonSets",
            "Deployments",
            "Endpoints",
            "Events",
            "HorizontalPodAutoscalers",
            "Ingresses",
            "Jobs",
            "LimitRanges",
            "PersistentVolumeClaims",
            "Pods",
            "PodDisruptionBudgets",
            "PodTemplates",
            "ReplicaSets",
            "ReplicationControllers",
            "ResourceQuotas",
            "RoleBindings",
            "Roles",
            "ServerGroups",
            "ServiceAccounts",
            "Services",
            "StatefulSets"
        ],
        "ResultsDir": "/tmp/sonobuoy",
        "Server": {
            "advertiseaddress": "sonobuoy-master:8080",
            "bindaddress": "0.0.0.0",
            "bindport": 8080,
            "timeoutseconds": 5400
        },
        "Version": "v0.10.0"
    }
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-config-cm
  namespace: heptio-sonobuoy
---
apiVersion: v1
data:
  ab.tmpl: |
    apiVersion: extensions/v1beta1
    kind: DaemonSet
    metadata:
      annotations:
        sonobuoy-driver: DaemonSet
        sonobuoy-plugin: ab
        sonobuoy-result-type: ab
      labels:
        component: sonobuoy
        sonobuoy-run: '{{.SessionID}}'
        tier: analysis
      name: ab
      namespace: '{{.Namespace}}'
    spec:
      selector:
        matchLabels:
          sonobuoy-run: '{{.SessionID}}'
      template:
        metadata:
          labels:
            component: sonobuoy
            sonobuoy-run: '{{.SessionID}}'
            tier: analysis
        spec:
          containers:
          - command:
            - bash
            - -c
            - /run_ab.sh && sleep 3600
            env:
            - name: RESULTS_DIR
              value: /tmp/results
            - name: NGINX_ENDPOINT
              value: http://10.96.232.136/
            image: wadelee/sonobuoy-plugin-ab:latest
            imagePullPolicy: Always
            name: sonobuoy-ab-{{.SessionID}}
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /tmp/results
              name: results
              readOnly: false
          - command:
            - sh
            - -c
            - /sonobuoy worker single-node -v 5 --logtostderr && sleep 3600
            env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: RESULTS_DIR
              value: /tmp/results
            - name: MASTER_URL
              value: '{{.MasterAddress}}'
            - name: RESULT_TYPE
              value: ab
            image: gcr.io/heptio-images/sonobuoy:master
            imagePullPolicy: Always
            name: sonobuoy-worker
            volumeMounts:
            - mountPath: /tmp/results
              name: results
              readOnly: false
          dnsPolicy: ClusterFirstWithHostNet
          hostIPC: true
          hostNetwork: true
          hostPID: true
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
            operator: Exists
          - key: CriticalAddonsOnly
            operator: Exists
          volumes:
          - emptyDir: {}
            name: results
kind: ConfigMap
metadata:
  labels:
    component: sonobuoy
  name: sonobuoy-plugins-cm
  namespace: heptio-sonobuoy
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    component: sonobuoy
    run: sonobuoy-master
    tier: analysis
  name: sonobuoy
  namespace: heptio-sonobuoy
spec:
  containers:
  - command:
    - /bin/bash
    - -c
    - /sonobuoy master --no-exit=true -v 3 --logtostderr
    env:
    - name: SONOBUOY_ADVERTISE_IP
      valueFrom:
        fieldRef:
          fieldPath: status.podIP
    image: gcr.io/heptio-images/sonobuoy:master
    imagePullPolicy: Always
    name: kube-sonobuoy
    volumeMounts:
    - mountPath: /etc/sonobuoy
      name: sonobuoy-config-volume
    - mountPath: /plugins.d
      name: sonobuoy-plugins-volume
    - mountPath: /tmp/sonobuoy
      name: output-volume
  restartPolicy: Never
  serviceAccountName: sonobuoy-serviceaccount
  volumes:
  - configMap:
      name: sonobuoy-config-cm
    name: sonobuoy-config-volume
  - configMap:
      name: sonobuoy-plugins-cm
    name: sonobuoy-plugins-volume
  - emptyDir: {}
    name: output-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    component: sonobuoy
    run: sonobuoy-master
  name: sonobuoy-master
  namespace: heptio-sonobuoy
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    run: sonobuoy-master
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: heptio-sonobuoy
spec:
  selector:
    app: nginx
  clusterIP: 10.96.232.136
  ports:
    - port: 80
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: heptio-sonobuoy
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 2
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80
